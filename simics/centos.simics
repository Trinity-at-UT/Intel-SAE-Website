# Basic script for booting CentOS and running PARSEC 3.0
$script_dir = (resolve-file -query "%script%")

# Location of SAE
$sae_directory = zsim

# Configure the machine
$host_name = "CentOS"
$num_cpus=1
$num_cores=8
$num_threads=1
$memory_megs = 16384
$disk_image = disk_images/centos.craff

# Connect to real network
if not defined create_network {$create_network = TRUE}
if not defined connect_real_network {$connect_real_network = TRUE}

# Specify the size of the virtual disk
$disk_size = (256 * 1024 * 1024 * 1024) # 256 GB

run-command-file "%script%/../targets/x86-x58-ich10/viper-fedora-14.simics"

local $con = ($host_name.console.con)
local $vga = ($host_name.mb.gpu.vga)

script-branch {
    # Boot the OS and login
    $vga.wait-for-string "dhcp0 login:"
    $con.input "sae\n"
    $vga.wait-for-string "Password:"
    $con.input "simics\n"
    $vga.wait-for-string "sae@dhcp0"

    $con.input "cd parsec-3.0\n"
    $vga.wait-for-string "sae@dhcp0"

    # Start measuring user time
    $start_time = (python "os.times()[0]")

    $con.input "for app in echo blackscholes bodytrack canneal dedup facesim ferret fluidanimate freqmine raytrace streamcluster swaptions vips x264; do bin/parsecmgmt -a run -p $app -n 8 -i simsmall; echo Done with $app; sleep 1; done\n"
    $vga.wait-for-string "Done with x264"

    # Stop measuring usertime and report
    $end_time = (python "os.times()[0]")
    $elapsed = $end_time - $start_time
    echo "PARSEC 3.0 time: " + $elapsed
}

# For performance (without SAE)
enable-vmp

# Enable SAE
#vcpu-command-all jibe-enable

# For usability
enable-real-time-mode

# Run
run
